This document contains notes about how to release this software.

Required Settings
=================
This process expects the following information exists in your Maven settings file:
* Global  : $MAVEN_HOME/conf/settings.xml
* Personal: $HOME/.m2/settings.xml

Store your username and password for the Sonatype Open Source Software Nexus server: https://oss.sonatype.org/index.html

  <servers>
    <server>
      <id>sonatype-nexus-snapshots</id>
      <username>${username}</username>
      <password>${password}</password>
    </server>
    <server>
      <id>sonatype-nexus-staging</id>
      <username>${username}</username>
      <password>${password}</password>
    </server>
  </servers>

Store your GNU OpenPGP password in a separate profile:

  <profiles>
    <profile>
      <id>gpg</id>
      <properties>
        <gpg.passphrase>${gpg.passphrase}</gpg.passphrase>
      </properties>
    </profile>
  </profiles>

Release Process
===============
Might be helpful for multi-module release:
http://onjavahell.blogspot.hk/2009/12/releasing-multi-module-project-using.html
https://dev.c-ware.de/confluence/display/PUBLIC/Releasing+modules+of+a+multi-module+project+with+independent+version+numbers

* mvn clean install site
** Any compiler errors or failed/skipped tests must be cleaned-up.
** Fix any Javadoc warnings.  Re-run as many times as necessary: mvn javadoc:javadoc
* git commit -a
* If necessary, merge branch back to master before release.
** Example:
*** git checkout master
*** git merge --no-ff other-branch-name
**** You will need to enter a commit/merge comment.
* mvn release:clean
* mvn release:prepare -P gpg
* After, git status will be "dirty".  Do not run 'git add'.  Ignore and procede to next step.
* git push --tags origin master
* mvn release:perform -P gpg
* After, git status will be "clean".
* https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-8a.ReleaseIt
** Do the Nexus dance to push the staged release.
* TODO: Script the next few steps below, including tagging 
* cd ../kevinarpe-papaya.docs
* rm -Rf ./javadoc/*
* cp -R ../kevinarpe-papaya/target/apidocs/* ./javadoc/
* git add . --all
* git commit -a
* git tag -a kevinarpe-papaya.docs-0.0.x -m 'Release x'
** Can we figure out the latest tag from kevinarpe-papaya?
* git push --tags origin master
* Update project homepage with new Maven Central Repo dependency details:
    http://code.google.com/p/kevinarpe-papaya/ 

